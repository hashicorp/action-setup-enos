---
name: Validate

on:
  pull_request:
    branches:
      - main

jobs:
  verify:
    name: "Validate Action"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          node-version: 20
      - run: npm install
      - name: Run CI checks
        run: npm run ci
      - name: Execute the action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: ./ #this took a full day to figure out and I hate it
      - name: Ensure that we haven't already released version
        run: |
          TAG="$(jq -r ".version" < package.json)"
          if git tag -l | grep -q "v$TAG"; then
            echo "Version $TAG already released, update package.json!";
            exit 1
          fi
      - name: Make sure we're releasing the latest stable version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=$(enos version)
          latest=$(gh release view -R hashicorp/enos --json tagName --jq '.tagName')
          if [[ "v${version}" != "${latest}" ]];
          then
            echo "Action installed version ${version} when ${latest} is latest!";
            exit 1;
          fi
      - name: Make sure the version we install matches what's in compiled action
        run: |
          version=$(enos version)
          dist_version=$(grep "^const latestVersion =" dist/index.js |awk -F"=" '{print $2}' | tr -d " ';" | tr -d '"')
          if [[ "${version}" != "${dist_version}" ]]; then
            echo "dist index.js not updated to latest. Expected: ${version}, got: ${dist_version}";
            exit 1;
          fi
